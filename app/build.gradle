apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {

    signingConfigs {
        debug {

        }
        release{
            keyAlias 'wanandroid'
            keyPassword 'q1w2e3r4'
            storeFile file("./wanandroid.jks")
            storePassword 'q1w2e3r4'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters /*'armeabi' ,*/ 'armeabi-v7a'/*, 'arm64-v8a'*/
        }
    }

    compileOptions{
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        // Sets the maximum number of DEX processes
        // that can be started concurrently.
        maxProcessCount 8
        // Sets the maximum memory allocation pool size
        // for the dex operation.
        javaMaxHeapSize "4g"
        // Enables Gradle to pre-dex library dependencies.
        preDexLibraries true
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField 'String', 'BUGLY_APP_ID', '"5a331f52dd"'
            buildConfigField 'String', 'UMENG_KEY', '"5f881d5b94846f78a9739937"'
            debuggable true

        }
        debug {
            //混淆
            minifyEnabled false
            // 移除无用的resource文件
            shrinkResources false
            buildConfigField 'String', 'BUGLY_APP_ID', '"5a331f52dd"'
            buildConfigField 'String', 'UMENY_KEY', '"5f881d5b94846f78a9739937"'
            debuggable true
            signingConfig signingConfigs.debug
        }


    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "v${defaultConfig.versionName}_${variant.buildType.name + "_" + releaseTime()}_wanandroid.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //
    implementation rootProject.ext.dependencies.coreKtx
    implementation rootProject.ext.dependencies.kotlinxCoroutinesCore
    implementation rootProject.ext.dependencies.kotlinxCoroutinesAndroid
    kapt rootProject.ext.dependencies.roomCompiler
    implementation rootProject.ext.dependencies.roomRuntime
    implementation rootProject.ext.dependencies.roomKtx
    implementation rootProject.ext.dependencies.roomRxjava2
    implementation rootProject.ext.dependencies.material
    implementation rootProject.ext.dependencies.swiperefreshlayout
    implementation rootProject.ext.dependencies.recyclerview
    implementation rootProject.ext.dependencies.rxjava2Rxjava
    implementation rootProject.ext.dependencies.rxjava2Rxandroid
    implementation rootProject.ext.dependencies.glide
    implementation rootProject.ext.dependencies.glideTransformations
    implementation rootProject.ext.dependencies.BaseRecyclerViewAdapterHelper
    implementation rootProject.ext.dependencies.LabelsView
    implementation rootProject.ext.dependencies.jiaozivideoplayer
    implementation rootProject.ext.dependencies.imagepicker
    implementation rootProject.ext.dependencies.commonutils
    implementation rootProject.ext.dependencies.rxhttp
    implementation rootProject.ext.dependencies.buglyCrashreportUpgrade
    implementation rootProject.ext.dependencies.buglyNativecrashreport
    implementation rootProject.ext.dependencies.tbssdk
    debugImplementation rootProject.ext.dependencies.leakcanary
    implementation project(':baselib')


}